{"ast":null,"code":"var _jsxFileName = \"/Users/frankwang/Documents/GitHub/photo-app/hw06/src/BookmarkButton.js\";\nimport React from 'react';\nimport Post from './Post';\nimport { getHeaders } from './utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass BookmarkButton extends React.Component {\n  constructor(props) {\n    super(props);\n    this.toggleBookmark = this.toggleBookmark.bind(this);\n    this.createBookmark = this.createBookmark.bind(this);\n    this.removeBookmark = this.removeBookmark.bind(this);\n  }\n\n  componentDidMount() {// fetch posts and then set the state...\n  }\n\n  toggleBookmark() {\n    if (this.props.bookmarkId) {\n      this.removeBookmark();\n    } else {\n      this.createBookmark();\n    }\n  }\n\n  createBookmark() {\n    const url = '/api/bookmarks';\n    const postData = {\n      post_id: this.props.postId\n    };\n    console.log('create bookmark:', url);\n    fetch(url, {\n      headers: getHeaders(),\n      method: 'POST',\n      body: JSON.stringify(postData)\n    }).then(response => response.json()).then(data => {\n      console.log(data);\n      this.props.refreshPost();\n    });\n  }\n\n  removeBookmark() {\n    const url = '/api/bookmarks/' + this.props.bookmarkId;\n    console.log('remove bookmark:', url);\n    fetch(url, {\n      headers: getHeaders(),\n      method: 'DELETE'\n    }).then(response => response.json()).then(data => {\n      console.log(data);\n      this.props.refreshPost();\n    });\n  }\n\n  render() {\n    const bookmarkId = this.props.bookmarkId;\n    const bookmarkClass = (bookmarkId ? 'fas' : 'far') + ' fa-bookmark';\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: this.toggleBookmark,\n      \"aria-label\": \"Bookmark / Unbookmark\",\n      children: /*#__PURE__*/_jsxDEV(\"i\", {\n        className: bookmarkClass\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }, this);\n  }\n\n}\n\nexport default BookmarkButton;","map":{"version":3,"sources":["/Users/frankwang/Documents/GitHub/photo-app/hw06/src/BookmarkButton.js"],"names":["React","Post","getHeaders","BookmarkButton","Component","constructor","props","toggleBookmark","bind","createBookmark","removeBookmark","componentDidMount","bookmarkId","url","postData","post_id","postId","console","log","fetch","headers","method","body","JSON","stringify","then","response","json","data","refreshPost","render","bookmarkClass"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAAQC,UAAR,QAAyB,SAAzB;;;AAEA,MAAMC,cAAN,SAA6BH,KAAK,CAACI,SAAnC,CAA6C;AAEzCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,cAAL,GAAsB,KAAKA,cAAL,CAAoBC,IAApB,CAAyB,IAAzB,CAAtB;AACA,SAAKC,cAAL,GAAsB,KAAKA,cAAL,CAAoBD,IAApB,CAAyB,IAAzB,CAAtB;AACA,SAAKE,cAAL,GAAsB,KAAKA,cAAL,CAAoBF,IAApB,CAAyB,IAAzB,CAAtB;AACH;;AAGDG,EAAAA,iBAAiB,GAAG,CAChB;AACH;;AAEDJ,EAAAA,cAAc,GAAG;AACb,QAAG,KAAKD,KAAL,CAAWM,UAAd,EAA0B;AACtB,WAAKF,cAAL;AACH,KAFD,MAEO;AACH,WAAKD,cAAL;AACH;AACJ;;AAEDA,EAAAA,cAAc,GAAI;AACd,UAAMI,GAAG,GAAG,gBAAZ;AACA,UAAMC,QAAQ,GAAG;AACbC,MAAAA,OAAO,EAAE,KAAKT,KAAL,CAAWU;AADP,KAAjB;AAGAC,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCL,GAAhC;AACAM,IAAAA,KAAK,CAACN,GAAD,EAAM;AACPO,MAAAA,OAAO,EAAElB,UAAU,EADZ;AAEPmB,MAAAA,MAAM,EAAE,MAFD;AAGPC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeV,QAAf;AAHC,KAAN,CAAL,CAIGW,IAJH,CAIQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAJpB,EAKCF,IALD,CAKMG,IAAI,IAAI;AACVX,MAAAA,OAAO,CAACC,GAAR,CAAYU,IAAZ;AACA,WAAKtB,KAAL,CAAWuB,WAAX;AACH,KARD;AASH;;AAEDnB,EAAAA,cAAc,GAAI;AACd,UAAMG,GAAG,GAAG,oBAAoB,KAAKP,KAAL,CAAWM,UAA3C;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCL,GAAhC;AACAM,IAAAA,KAAK,CAACN,GAAD,EAAM;AACPO,MAAAA,OAAO,EAAElB,UAAU,EADZ;AAEPmB,MAAAA,MAAM,EAAE;AAFD,KAAN,CAAL,CAGGI,IAHH,CAGQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAHpB,EAICF,IAJD,CAIMG,IAAI,IAAI;AACVX,MAAAA,OAAO,CAACC,GAAR,CAAYU,IAAZ;AACA,WAAKtB,KAAL,CAAWuB,WAAX;AACH,KAPD;AAQH;;AAGAC,EAAAA,MAAM,GAAI;AACP,UAAMlB,UAAU,GAAG,KAAKN,KAAL,CAAWM,UAA9B;AACA,UAAMmB,aAAa,GAAG,CAACnB,UAAU,GAAG,KAAH,GAAW,KAAtB,IAA+B,cAArD;AACA,wBACQ;AACI,MAAA,OAAO,EAAE,KAAKL,cADlB;AAEI,oBAAW,uBAFf;AAAA,6BAGI;AAAG,QAAA,SAAS,EAAEwB;AAAd;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA,YADR;AAOH;;AA/DwC;;AAkE7C,eAAe5B,cAAf","sourcesContent":["import React from 'react';\nimport Post from './Post';\nimport {getHeaders} from './utils';\n\nclass BookmarkButton extends React.Component {\n  \n    constructor(props) {\n        super(props);\n        this.toggleBookmark = this.toggleBookmark.bind(this);\n        this.createBookmark = this.createBookmark.bind(this);\n        this.removeBookmark = this.removeBookmark.bind(this);\n    }\n\n\n    componentDidMount() {\n        // fetch posts and then set the state...\n    }\n\n    toggleBookmark() {\n        if(this.props.bookmarkId) {\n            this.removeBookmark();\n        } else {\n            this.createBookmark();\n        }\n    }\n\n    createBookmark () {\n        const url = '/api/bookmarks';\n        const postData = {\n            post_id: this.props.postId\n        }\n        console.log('create bookmark:', url);\n        fetch(url, {\n            headers: getHeaders(),\n            method: 'POST',\n            body: JSON.stringify(postData)\n        }).then(response => response.json())\n        .then(data => {\n            console.log(data);\n            this.props.refreshPost();\n        })\n    }\n\n    removeBookmark () {\n        const url = '/api/bookmarks/' + this.props.bookmarkId;\n        console.log('remove bookmark:', url);\n        fetch(url, {\n            headers: getHeaders(),\n            method: 'DELETE'\n        }).then(response => response.json())\n        .then(data => {\n            console.log(data);\n            this.props.refreshPost();\n        })\n    }\n\n\n     render () {\n        const bookmarkId = this.props.bookmarkId;\n        const bookmarkClass = (bookmarkId ? 'fas' : 'far') + ' fa-bookmark';\n        return (\n                <button \n                    onClick={this.toggleBookmark}\n                    aria-label=\"Bookmark / Unbookmark\">\n                    <i className={bookmarkClass}></i>\n                </button>\n        )\n    }\n}\n\nexport default BookmarkButton;"]},"metadata":{},"sourceType":"module"}